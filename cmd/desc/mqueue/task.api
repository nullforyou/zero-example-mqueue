type (
    CreateTaskReq {
        CreateTaskItem
    }

    CreateTaskResp {
        TaskItemResp
    }

    TaskItemReq {
        TaskName string `path:"task_name"`
    }

    CreateTaskItem {
        BelongToService string `json:"belong_to_service,optional" comment:"所属服务" validate:"required"`
        CronSpec        string `json:"cron_spec,optional" comment:"周期规格" validate:"required,cron"`
        TaskType        string `json:"task_type,optional" comment:"任务类型" validate:"required,oneof=platform-http"`
        TaskName        string `json:"task_name,optional" comment:"任务名称" validate:"required"`
        TaskRemark      string `json:"task_remark,optional" comment:"任务描述" validate:"required"`
        Target          string `json:"target,optional" comment:"任务目标"`
        State           int `json:"state,optional" comment:"状态" validate:"omitempty,required,oneof=0 1"`
    }

    TaskItemResp {
        Id int `json:"id"`
        CreateTaskItem
        UpdatedAt string `json:"updated_at"`
    }

    TasksCollectionReq {
        BelongToService string `form:"belong_to_service,optional"`
        TaskType string `form:"task_type,optional"`
        TaskName string `form:"task_name,optional"`
        State string `form:"state,optional" validate:"omitempty,required,oneof=enable disable"`
        Page     int `form:"page,default=1"`
        PageSize int `form:"page_size,default=10"`
    }

    TasksCollectionResp {
        Total int `json:"total"`
        List []TaskItemResp `json:"list"`
    }

    UpdateTaskReq {
        CreateTaskItem
    }

    UpdateTaskResp {
        TaskItemResp
    }

    SwitchTaskStateReq {
        TaskName string `path:"task_name" validate:"required"`
        State    int `json:"state,optional" validate:"omitempty,required,oneof=0 1"`
    }

    SwitchTaskStateResp {
        TaskName string `json:"task_name"`
    }
    //执行单入参
    ExecuteTaskReq {
        TaskName string `path:"task_name" validate:"required"`
    }

    ExecuteTaskResp{}
)